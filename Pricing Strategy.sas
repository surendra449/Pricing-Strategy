libname Q '';

/* Clustered stores using latent gold software and imported for further analysis */

PROC IMPORT OUT= Store_Clus 
            DATAFILE= "local_path/Store_Clus.csv" 
            DBMS=CSV REPLACE;
     GETNAMES=YES;
	* guessingrows=3944;
     DATAROW=2; 
RUN;

/* Regresison on cluster 2 data and price elasticity of demand on menu items */

Data Store_Clus_2;
set Store_Clus;
where clu_ = 2;
run;

data Store_Clus_2;
set Store_Clus_2;
	_4_PC_NUIGGETS_PRICE = _4_PC_NUIGGETS_SALES / _4_PC_NUIGGETS_QUANTITY;
	_4_PC_SPICY_NUGGETS_PRICE = _4_PC_SPICY_NUGGETS_SALES / _4_PC_SPICY_NUGGETS_QUANTITY;
	_6_PC_NUGGETS_PRICE = _6_PC_NUGGETS_SALES / _6_PC_NUGGETS_QUANTITY;
	_6_PC_SPICY_NUGGETS_PRICE = _6_PC_SPICY_NUGGETS_SALES / _6_PC_SPICY_NUGGETS_QUANTITY;
	_8_OZ_CHILI_PRICE = _8_OZ_CHILI_SALES / _8_OZ_CHILI_QUANTITY;
	_10_PC_NUGGETS_PRICE = _10_PC_NUGGETS_SALES / _10_PC_NUGGETS_QUANTITY;
	_10_PC_SPICY_NUGGETS_PRICE = _10_PC_SPICY_NUGGETS_SALES / _10_PC_SPICY_NUGGETS_QUANTITY;
	_12_OZ_CHILI_PRICE = _12_OZ_CHILI_SALES / _12_OZ_CHILI_QUANTITY;
	_12_OZ_DISPENS_DRINKS_PRICE = _12_OZ_DISPENSED_DRINKS_SALES / _12_OZ_DISPENSED_DRINKS_QUANTITY;
	APPLE_PECAN_SALAD_PRICE = APPLE_PECAN_SALAD_SALES / APPLE_PECAN_SALAD_QUANTITY;
	APPLE_SLICES_PRICE = APPLE_SLICES_SALES / APPLE_SLICES_QUANTITY;
	BACON_CH_POTATO_PRICE = BACON_CH_POTATO_SALES / BACON_CH_POTATO_QUANTITY;
	BACON_CHEESE_FRIES_PRICE = BACON_CHEESE_FRIES_SALES / BACON_CHEESE_FRIES_QUANTITY;
	BACON_MOZZARELLA_PRICE = BACON_MOZZARELLA_SALES / BACON_MOZZARELLA_QUANTITY;
	BACON_RANCH_FRIES_PRICE = BACON_RANCH_FRIES_SALES / BACON_RANCH_FRIES_QUANTITY;
	BBQ_SALAD_PRICE = BBQ_SALAD_SALES / BBQ_SALAD_QUANTITY;
	BOTTLED_WATER_PRICE = BOTTLED_WATER_SALES / BOTTLED_WATER_QUANTITY;
	CAESAR_SIDE_SALAD_PRICE = CAESAR_SIDE_SALAD_SALES / CAESAR_SIDE_SALAD_QUANTITY;
	CHEESE_FRIES_PRICE = CHEESE_FRIES_SALES / CHEESE_FRIES_QUANTITY;
	CHEESE_POTATO_PRICE = CHEESE_POTATO_SALES / CHEESE_POTATO_QUANTITY;
	CHILI_CHEESE_FRIES_PRICE = CHILI_CHEESE_FRIES_SALES / CHILI_CHEESE_FRIES_QUANTITY;
	CHILI_SALAD_PRICE = CHILI_SALAD_SALES / CHILI_SALAD_QUANTITY;
	CHILI_CH_POT_PRICE = CHILI_CH_POT_SALES / CHILI_CH_POT_QUANTITY;
	CKN_CLUB_PRICE = CKN_CLUB_SALES / CKN_CLUB_QUANTITY;
	CL_TRIPLE_PRICE = CL_TRIPLE_SALES / CL_TRIPLE_QUANTITY;
	CLASSIC_DBL_PRICE = CLASSIC_DBL_SALES / CLASSIC_DBL_QUANTITY;
	CLASSIC_SNGL_PRICE = CLASSIC_SNGL_SALES / CLASSIC_SNGL_QUANTITY;
	CRISPY_CHICKEN_SANDWICH_PRICE = CRISPY_CHICKEN_SANDWICH_SALES / CRISPY_CHICKEN_SANDWICH_QUANTITY;
	DELUXE_CRISPY_CKN_SANDWICH_PRICE = DELUXE_CRISPY_CKN_SANDWICH_SALES / DELUXE_CRISPY_CKN_SANDWICH_QUANT;
	DOUBLE_BACONATOR_PRICE = DOUBLE_BACONATOR_SALES / DOUBLE_BACONATOR_QUANTITY;
	DOUBLE_STACK_PRICE = DOUBLE_STACK_SALES / DOUBLE_STACK_QUANTITY;
	FRESH_MOZZ_CHICKEN_SAND_PRICE = FRESH_MOZZ_CHICKEN_SAND_SALES / FRESH_MOZZ_CHICKEN_SAND_QUANTITY;
	FRESH_MOZZARELLA_SALAD_PRICE = FRESH_MOZZARELLA_SALAD_SALES / FRESH_MOZZARELLA_SALAD_QUANTITY;
	FROSTY_FLOAT_ALA_PRICE = FROSTY_FLOAT_ALA_SALES / FROSTY_FLOAT_ALA_QUANTITY;
	GRILLED_CKN_GO_WRAP_PRICE = GRILLED_CKN_GO_WRAP_SALES / GRILLED_CKN_GO_WRAP_QUANTITY;
	HMSTYL_CKN_FILLET_PRICE = HMSTYL_CKN_FILLET_SALES / HMSTYL_CKN_FILLET_QUANTITY;
	HOMESTYLE_GO_WRAPS_PRICE = HOMESTYLE_GO_WRAPS_SALES / HOMESTYLE_GO_WRAPS_QUANTITY;
	HONEST_KIDS_FRUIT_PUNCH_PRICE = HONEST_KIDS_FRUIT_PUNCH_SALES / HONEST_KIDS_FRUIT_PUNCH_QUANTITY;
	HOT_TEA_PRICE = HOT_TEA_SALES / HOT_TEA_QUANTITY;
	JR_BACON_CHEESEBURGER_PRICE = JR_BACON_CHEESEBURGER_SALES / JR_BACON_CHEESEBURGER_QUANTITY;
	JR_CHEESE_DLX_PRICE = JR_CHEESE_DLX_SALES / JR_CHEESE_DLX_QUANTITY;
	JR_CHEESEBURGER_PRICE = JR_CHEESEBURGER_SALES / JR_CHEESEBURGER_QUANTITY;
	JR_HAMBURGER_PRICE = JR_HAMBURGER_SALES / JR_HAMBURGER_QUANTITY;
	JR_REGULAR_FROSTY_PRICE = JR_REGULAR_FROSTY_SALES / JR_REGULAR_FROSTY_QUANTITY;
	KIDS_FRIES_PRICE = KIDS_FRIES_SALES / KIDS_FRIES_QUANTITY;
	KM_4PC_NUGGETS_PRICE = KM_4PC_NUGGETS_SALES / KM_4PC_NUGGETS_QUANTITY;
	KM_CHEESEBURGER_PRICE = KM_CHEESEBURGER_SALES / KM_CHEESEBURGER_QUANTITY;
	KM_CRSPY_CKN_SAND_PRICE = KM_CRSPY_CKN_SAND_SALES / KM_CRSPY_CKN_SAND_QUANTITY;
	KM_HAMBURGER_PRICE = KM_HAMBURGER_SALES / KM_HAMBURGER_QUANTITY;
	KM_WRAPS_PRICE = KM_WRAPS_SALES / KM_WRAPS_QUANTITY;
	LARGE_DRINKS_PRICE = LARGE_DRINKS_SALES / LARGE_DRINKS_QUANTITY;
	LARGE_FRIES_PRICE = LARGE_FRIES_SALES / LARGE_FRIES_QUANTITY;
	LARGE_REGULAR_FROSTY_PRICE = LARGE_REGULAR_FROSTY_SALES / LARGE_REGULAR_FROSTY_QUANTITY;
	MEDITERRANEAN_SALAD_PRICE = MEDITERRANEAN_SALAD_SALES / MEDITERRANEAN_SALAD_QUANTITY;
	MEDIUM_DRINKS_PRICE = MEDIUM_DRINKS_SALES / MEDIUM_DRINKS_QUANTITY;
	MEDIUM_FRIES_PRICE = MEDIUM_FRIES_SALES / MEDIUM_FRIES_QUANTITY;
	MEDIUM_REGULAR_FROSTY_PRICE = MEDIUM_REGULAR_FROSTY_SALES / MEDIUM_REGULAR_FROSTY_QUANTITY;
	MILK_PRICE = MILK_SALES / MILK_QUANTITY;
	ORIGINAL_COFFEE_PRICE = ORIGINAL_COFFEE_SALES / ORIGINAL_COFFEE_QUANTITY;
	PLAIN_AND_SR_CRM_CHV_POT_PRICE = PLAIN_AND_SR_CRM_CHV_POTATO_SALE / PLAIN_AND_SR_CRM_CHV_POTATO_QUAN;
	PREMIUM_FISH_PRICE = PREMIUM_FISH_SALES / PREMIUM_FISH_QUANTITY;
	SIDE_SALAD_PRICE = SIDE_SALAD_SALES / SIDE_SALAD_QUANTITY;
	SINGLE_BACONATOR_PRICE = SINGLE_BACONATOR_SALES / SINGLE_BACONATOR_QUANTITY;
	SMALL_DRINKS_PRICE = SMALL_DRINKS_SALES / SMALL_DRINKS_QUANTITY;
	SMALL_FRIES_PRICE = SMALL_FRIES_SALES / SMALL_FRIES_QUANTITY;
	SMALL_REGULAR_FROSTY_PRICE = SMALL_REGULAR_FROSTY_SALES / SMALL_REGULAR_FROSTY_QUANTITY;
	SON_OF_BACONATOR_PRICE = SON_OF_BACONATOR_SALES / SON_OF_BACONATOR_QUANTITY;
	SPICY_CHICKEN_CAESAR_SALAD_PRICE = SPICY_CHICKEN_CAESAR_SALAD_SALES / SPICY_CHICKEN_CAESAR_SALAD_QUANT;
	SPICY_CKN_FILLET_PRICE = SPICY_CKN_FILLET_SALES / SPICY_CKN_FILLET_QUANTITY;
	SPICY_CKN_GO_WRAP_PRICE = SPICY_CKN_GO_WRAP_SALES / SPICY_CKN_GO_WRAP_QUANTITY;
	SRIRACHA_FRIES_PRICE = SRIRACHA_FRIES_SALES / SRIRACHA_FRIES_QUANTITY;
	SRIRACHA_SPICY_CHICK_SAND_PRICE = SRIRACHA_SPICY_CHICKEN_SAND_SALE/ SRIRACHA_SPICY_CHICKEN_SAND_QUAN;
	SUMMER_BERRY_SALAD_PRICE = SUMMER_BERRY_SALAD_SALES / SUMMER_BERRY_SALAD_QUANTITY;
	SWISS_JBC_PRICE = SWISS_JBC_SALES / SWISS_JBC_QUANTITY;
	TACO_SALAD_PRICE = TACO_SALAD_SALES / TACO_SALAD_QUANTITY;
	TRIPLE_BACONATOR_PRICE = TRIPLE_BACONATOR_SALES / TRIPLE_BACONATOR_QUANTITY;
	ULT_GRILLED_CKN_PRICE = ULT_GRILLED_CKN_SALES / ULT_GRILLED_CKN_QUANTITY;
	VALUE_DRINKS_PRICE = VALUE_DRINKS_SALES / VALUE_DRINKS_QUANTITY;
run;

proc stdize data=Store_Clus_2 out=Store_Clus_2_std method=mean reponly;
var _4_PC_NUIGGETS_PRICE--VALUE_DRINKS_PRICE;
run;

proc reg data = Store_Clus_2_std;
model sum_totaltransactionamount = _4_PC_NUIGGETS_PRICE--VALUE_DRINKS_PRICE/ selection=stepwise;
run;

proc reg data = Store_Clus_2_std;
model sum_totaltransactionamount = 
	SMALL_DRINKS_PRICE
	SWISS_JBC_PRICE
	HOT_TEA_PRICE
	PREMIUM_FISH_PRICE
	KM_WRAPS_PRICE
	SMALL_REGULAR_FROSTY_PRICE
	LARGE_REGULAR_FROSTY_PRICE
	_4_PC_SPICY_NUGGETS_PRICE
	JR_REGULAR_FROSTY_PRICE
	DELUXE_CRISPY_CKN_SANDWICH_PRICE
	SMALL_FRIES_PRICE
	SINGLE_BACONATOR_PRICE
	JR_CHEESEBURGER_PRICE
	MEDIUM_REGULAR_FROSTY_PRICE
	CLASSIC_SNGL_PRICE
	_10_PC_SPICY_NUGGETS_PRICE
	SON_OF_BACONATOR_PRICE
	TACO_SALAD_PRICE
	BACON_MOZZARELLA_PRICE
	JR_HAMBURGER_PRICE;
run;

proc means data = Store_Clus_2_std;
var JR_CHEESEBURGER_QUANTITY
	MEDIUM_REGULAR_FROSTY_QUANTITY
	CLASSIC_SNGL_QUANTITY
	_10_PC_SPICY_NUGGETS_QUANTITY
	SON_OF_BACONATOR_QUANTITY
	TACO_SALAD_QUANTITY
	BACON_MOZZARELLA_QUANTITY
	JR_HAMBURGER_QUANTITY
	SMALL_DRINKS_QUANTITY
	SWISS_JBC_QUANTITY
	HOT_TEA_QUANTITY
	PREMIUM_FISH_QUANTITY
	KM_WRAPS_QUANTITY
	SMALL_REGULAR_FROSTY_QUANTITY
	LARGE_REGULAR_FROSTY_QUANTITY
	_4_PC_SPICY_NUGGETS_QUANTITY
	JR_REGULAR_FROSTY_QUANTITY
	DELUXE_CRISPY_CKN_SANDWICH_QUANT
	SMALL_FRIES_QUANTITY
	SINGLE_BACONATOR_QUANTITY;
run;

proc means data = Store_Clus_2_std;
var JR_CHEESEBURGER_PRICE
	MEDIUM_REGULAR_FROSTY_PRICE
	CLASSIC_SNGL_PRICE
	_10_PC_SPICY_NUGGETS_PRICE
	SON_OF_BACONATOR_PRICE
	TACO_SALAD_PRICE
	BACON_MOZZARELLA_PRICE
	JR_HAMBURGER_PRICE
	SMALL_DRINKS_PRICE
	SWISS_JBC_PRICE
	HOT_TEA_PRICE
	PREMIUM_FISH_PRICE
	KM_WRAPS_PRICE
	SMALL_REGULAR_FROSTY_PRICE
	LARGE_REGULAR_FROSTY_PRICE
	_4_PC_SPICY_NUGGETS_PRICE
	JR_REGULAR_FROSTY_PRICE
	DELUXE_CRISPY_CKN_SANDWICH_PRICE
	SMALL_FRIES_PRICE
	SINGLE_BACONATOR_PRICE;
run;

/* Predicting one single item quantity based on other menu item prices for applying price elasticity of demand model */
/* Similarly have developed for all the menu items */

proc reg data = Store_Clus_2_std;
model JR_CHEESEBURGER_QUANTITY= 
	SMALL_DRINKS_PRICE
	SWISS_JBC_PRICE
	HOT_TEA_PRICE
	PREMIUM_FISH_PRICE
	KM_WRAPS_PRICE
	SMALL_REGULAR_FROSTY_PRICE
	LARGE_REGULAR_FROSTY_PRICE
	_4_PC_SPICY_NUGGETS_PRICE
	JR_REGULAR_FROSTY_PRICE
	DELUXE_CRISPY_CKN_SANDWICH_PRICE
	SMALL_FRIES_PRICE
	SINGLE_BACONATOR_PRICE
	JR_CHEESEBURGER_PRICE
	MEDIUM_REGULAR_FROSTY_PRICE
	CLASSIC_SNGL_PRICE
	_10_PC_SPICY_NUGGETS_PRICE
	SON_OF_BACONATOR_PRICE
	TACO_SALAD_PRICE
	BACON_MOZZARELLA_PRICE
	JR_HAMBURGER_PRICE;
run;

/* Market Basket Analysis */

data Store_Clus_2_std;
set Store_Clus_2_std;
l_JR_CHEESEBURGER_SALES=0;
l_MEDIUM_REGULAR_FROSTY_SALES=0;
l_CLASSIC_SNGL_SALES=0;
l__10_PC_SPICY_NUGGETS_SALES=0;
l_SON_OF_BACONATOR_SALES=0;
l_TACO_SALAD_SALES=0;
l_BACON_MOZZARELLA_SALES=0;
l_JR_HAMBURGER_SALES=0;
l_SMALL_DRINKS_SALES=0;
l_SWISS_JBC_SALES=0;
l_HOT_TEA_SALES=0;
l_PREMIUM_FISH_SALES=0;
l_KM_WRAPS_SALES=0;
l_SMALL_REGULAR_FROSTY_SALES=0;
l_LARGE_REGULAR_FROSTY_SALES=0;
l__4_PC_SPICY_NUGGETS_SALES=0;
l_JR_REGULAR_FROSTY_SALES=0;
l_DELUXE_CRISPY_CKN_SAN_SALES=0;
l_SMALL_FRIES_SALES=0;
l_SINGLE_BACONATOR_SALES=0;
if JR_CHEESEBURGER_SALES > 24981.13 then l_JR_CHEESEBURGER_SALES =  1  ;
if MEDIUM_REGULAR_FROSTY_SALES > 25852.18 then l_MEDIUM_REGULAR_FROSTY_SALES =  1  ;
if CLASSIC_SNGL_SALES > 114952.44 then l_CLASSIC_SNGL_SALES =  1  ;
if _10_PC_SPICY_NUGGETS_SALES > 5165.89 then l__10_PC_SPICY_NUGGETS_SALES =  1  ;
if SON_OF_BACONATOR_SALES > 36319.05 then l_SON_OF_BACONATOR_SALES =  1  ;
if TACO_SALAD_SALES > 13616.91 then l_TACO_SALAD_SALES =  1  ;
if BACON_MOZZARELLA_SALES > 7410.18 then l_BACON_MOZZARELLA_SALES =  1  ;
if JR_HAMBURGER_SALES > 3430.3 then l_JR_HAMBURGER_SALES =  1  ;
if SMALL_DRINKS_SALES > 150622.05 then l_SMALL_DRINKS_SALES =  1  ;
if SWISS_JBC_SALES > 1660.36 then l_SWISS_JBC_SALES =  1  ;
if HOT_TEA_SALES > 78.2134164 then l_HOT_TEA_SALES =  1  ;
if PREMIUM_FISH_SALES > 14358.98 then l_PREMIUM_FISH_SALES =  1  ;
if KM_WRAPS_SALES > 1687.76 then l_KM_WRAPS_SALES =  1  ;
if SMALL_REGULAR_FROSTY_SALES > 41723.42 then l_SMALL_REGULAR_FROSTY_SALES =  1  ;
if LARGE_REGULAR_FROSTY_SALES > 17527.63 then l_LARGE_REGULAR_FROSTY_SALES =  1  ;
if _4_PC_SPICY_NUGGETS_SALES > 7814.42 then l__4_PC_SPICY_NUGGETS_SALES =  1  ;
if JR_REGULAR_FROSTY_SALES > 9898.37 then l_JR_REGULAR_FROSTY_SALES =  1  ;
if DELUXE_CRISPY_CKN_SANDWICH_SALES > 16542.11 then l_DELUXE_CRISPY_CKN_SAN_SALES =  1  ;
if SMALL_FRIES_SALES > 135844.91 then l_SMALL_FRIES_SALES =  1  ;
if SINGLE_BACONATOR_SALES > 2114.06 then l_SINGLE_BACONATOR_SALES =  1;
run;


proc logistic descending data = Store_Clus_2_std;
model l_MEDIUM_REGULAR_FROSTY_SALES= 
	l_JR_CHEESEBURGER_SALES
	l_MEDIUM_REGULAR_FROSTY_SALES
	l_CLASSIC_SNGL_SALES
	l__10_PC_SPICY_NUGGETS_SALES
	l_SON_OF_BACONATOR_SALES
	l_TACO_SALAD_SALES
	l_BACON_MOZZARELLA_SALES
	l_JR_HAMBURGER_SALES
	l_SMALL_DRINKS_SALES
	l_SWISS_JBC_SALES
	l_HOT_TEA_SALES
	l_PREMIUM_FISH_SALES
	l_KM_WRAPS_SALES
	l_SMALL_REGULAR_FROSTY_SALES
	l_LARGE_REGULAR_FROSTY_SALES
	l__4_PC_SPICY_NUGGETS_SALES
	l_JR_REGULAR_FROSTY_SALES
	l_DELUXE_CRISPY_CKN_SAND_SALES
	l_SMALL_FRIES_SALES
	l_SINGLE_BACONATOR_SALES ; 
run;
